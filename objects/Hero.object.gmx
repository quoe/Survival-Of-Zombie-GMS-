<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>H_I</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>Life_Object</parentName>
  <maskName>mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Задание начальных параметров Героя
global.hero_base_speed = 0.8;
global.hero_speed = global.hero_base_speed/global.level_difficult + random(global.hero_base_speed/2 * global.level_difficult); //Скорость передвижения
global.hero_eat = false;        //Герой есть? true если да
global.hero_eat_base_health_regen = 0.05;   //Базовая Регенерация при поедании
global.hero_eat_health_regen = global.hero_eat_base_health_regen/global.level_difficult + random(global.hero_eat_base_health_regen/(5 * global.level_difficult));
global.hero_attack = false;     //Герой сейчас атакует? true если да
global.hero_base_attack_speed = 10;
global.hero_attack_speed = global.hero_base_attack_speed * global.level_difficult; //Скорость атаки (время между атаками). Чем меньше тем лучше
global.hero_base_damage = 30;   //Базовый урон атаки
global.hero_damage = global.hero_base_damage/global.level_difficult;         //Урон наносимый при одном ударе
global.hero_eating_base_time = (50 * global.level_difficult + random(5))*global.level_difficult;    //Базовая скорость поедания
global.hero_eating_time = global.hero_eating_base_time; //Время поедания на основе максимальных жизней жертвы (V_CLASS). Больше жизней -&gt; больше время
global.victim_profit = 0.01;    //Дополнительное восстановление в зависимости от жизней жертвы
global.hero_health_lost = 0.1;       //Базовая потеря ежесекундно здоровья
global.hero_base_slow_vict = 0;       //Замедление жертв базовое
//global.hero_slow_vict = global.hero_base_slow_vict + random(global.hero_base_slow_vict/(2*global.level_difficult));       //Замедление жертв
global.hero_slow_vict_time = global.hero_base_slow_vict * 10;    //Время замедления

global.skill_mutation = 0;//Мутация способности (чуть больше заданного улучшится)
global.hero_skill_mutated = false;//Способность мутировала. true если да.
global.hero_skill_mutated_value = 0;//Способность мутировала на сколько

global.hero_smash_damage = 1; //Удар по области. Чем больше значение тем слабее удар

global.skill_selected = false;

health = 70/global.level_difficult + random(10);
if health &gt; 100 health = 100;

move_by_keys = false;   //Управление с клавиатуры

//Координаты будущего клика мышки
global.hero_target_x = x;
global.hero_target_y = y;

sprite_set_offset(sprite_index, 16, 25);    //Origin спрайта

array_of_sprites[0] = H_I;    //Спрайт Idle
array_of_sprites[1] = H_D;    //Спрайт Dowm
array_of_sprites[2] = H_L;    //Спрайт Left
array_of_sprites[3] = H_R;    //Спрайт Right
array_of_sprites[4] = H_U;    //Спрайт Up
array_of_sprites[5] = H_E;    //Спрайт Eat

global.game_time = 0;
alarm[1] = 30;

score = 0;

//highscore_clear();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Особая чёрная магия чтобы герой не шёл на место клика выбранного скила
global.hero_target_x = x;
global.hero_target_y = y;
global.skill_selected = false;
//И Курсор стал обычным
window_set_cursor(cr_default);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Сколько прошло "времени" с начала игры

//Герой перестаёт атаковать на основе скорости атаки
//код у V_CLASS ALARM[1]
//global.hero_attack = false;

global.game_time += 1;
alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Герой ест
if global.hero_eat 
{
    global.hero_eat = false;
    speed = 0;
    sprite_index = array_of_sprites[0]; //Спрайт Idle
    global.hero_attack = false; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Физические свойства
if health &gt; 100 health = 100;
//Потеря ежесекундно здоровья
if global.hero_health_lost &lt;= 0
    global.hero_health_lost = 0.01;
health -= random(global.hero_health_lost * global.level_difficult);
//Урон наносимый при одном ударе
global.hero_damage = global.hero_base_damage/global.level_difficult;    
//Скорость передвижения    
global.hero_speed = global.hero_base_speed/global.level_difficult + random(global.hero_base_speed/2 * global.level_difficult);
//Скорость атаки (время между атаками). Чем меньше тем лучше
if global.hero_base_attack_speed &lt;= 1
    global.hero_base_attack_speed = 1
global.hero_attack_speed = global.hero_base_attack_speed * global.level_difficult; 
//Время замедления
global.hero_slow_vict_time = global.hero_base_slow_vict * 100/global.level_difficult;  
//Время поедания
if global.hero_eating_base_time &lt;= 0
    global.hero_eating_base_time = 0.01;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Движение на клавиатуру
//obj_Move_script
var motion_x, motion_y, motion_speed, motion_dir, deviation_max, deviation_max_step; 
motion_x       = 0;  /// Смещение героя по осям Ox и Oy 
motion_y       = 0; 
motion_speed   = global.hero_speed;  // Скорость движениz (константа) 
motion_dir     = 0;  // Направление движения 
deviation_max  = 90; // Максимальное отклонение (константа) 
deviation_step = 5;  // Шаг изменения направление 
    
if !global.hero_eat 
{
    /// Задаём смещение героя, чтобы определить направление движения. 
    if (keyboard_check(ord('W'))) 
          motion_y = -1; 
    if (keyboard_check(ord('A'))) 
          motion_x = -1; 
    if (keyboard_check(ord('S'))) 
          motion_y = 1; 
    if (keyboard_check(ord('D'))) 
          motion_x = 1; 
          
    /// Если это возможно, сдвигаем героя. 
    if (motion_x != 0 || motion_y != 0) // Если игрок двигается, то... 
    { 
          var lx, ly; 
          movement_dir = point_direction(0, 0, motion_x, motion_y); // Определяем направление движения героя, от (0, 0), до точки смещения (к примеру, (-1, 0)). 
            
          for (i = 0; i &lt; deviation_max; i += deviation_step) // Проверяем все позици в изначальном направлении с заданным отклонением. 
          { 
              lx = lengthdir_x(motion_speed, movement_dir + i); // Вычисляем позицию в текущем направлении (i - отклонение). 
              ly = lengthdir_y(motion_speed, movement_dir + i); 
              if place_free(x + lx, y + ly) // Если эта позиция свободна, то... 
              { 
                  x += lx; /// Передвигаемся и завершаем цикл. 
                  y += ly; 
                  break; 
              } 
                
              lx = lengthdir_x(motion_speed, movement_dir - i); 
              ly = lengthdir_y(motion_speed, movement_dir - i); 
              if place_free(x + lx, y + ly) 
              { 
                  x += lx; 
                  y += ly; 
                  break; 
              } 
          } 
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Анимация движения на клавиатуру
if (motion_y == -1) 
    sprite_index = array_of_sprites[4];   //Спрайт движение вверх (Up)
else
if (motion_x = -1) 
    sprite_index = array_of_sprites[2];   //Спрайт движение влево (Left)
else
if (motion_y = 1) 
    sprite_index = array_of_sprites[1];   //Спрайт движение вниз (Down)
else
if (motion_x = 1) 
    sprite_index = array_of_sprites[3];   //Спрайт движение вправо (Right)
else
    {
    sprite_index = array_of_sprites[0];   //Спрайт отсутствия движений (Idle)
    move_by_keys = false;
    }
    
if (motion_x != 0) || (motion_y != 0) 
    {
    move_by_keys = true;   //Управление с клавиатуры
    global.hero_target_x = x;
    global.hero_target_y = y;
    }

    //Скорость спрайта
if sprite_index == array_of_sprites[0]
    image_speed = sqrt(global.hero_speed)/10;
else
    image_speed = global.hero_speed/10;

    //Накручиваем скорость
if keyboard_check_released(ord('G')) 
{
global.hero_base_speed += 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Движение на мышь
if global.skill_selected == true 
{
if alarm[2] &lt; 0     //Если сигнал не включен
    alarm[2] = 1; //Включить..
}

if !global.hero_eat &amp; !move_by_keys
{
    if mouse_check_button_released(mb_left) 
        {
        global.hero_target_x = mouse_x;
        global.hero_target_y = mouse_y;
        }
    
    if !(abs(global.hero_target_x - x) &lt;= sprite_width/5) || !(abs(global.hero_target_y - y) &lt;= sprite_height/5)
    mp_potential_step(global.hero_target_x, global.hero_target_y, global.hero_speed, false)
    else speed = 0;
}
    /*
Hero_Click.x = mouse_x;
Hero_Click.y = mouse_y;
move_towards_point(Hero_Click.x, Hero_Click.y, global.hero_speed);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Анимация движения на мышь
if !global.hero_eat &amp; !move_by_keys
{
    if (abs(global.hero_target_x - x)) &gt;= (abs(global.hero_target_y - y))   //Движемя горизонтально
        if global.hero_target_x &gt;= x
            sprite_index = array_of_sprites[3];   //Спрайт движение вправо (Right)
        else
            sprite_index = array_of_sprites[2];   //Спрайт движение влево (Left)
    else
    if (abs(global.hero_target_x - x)) &lt; (abs(global.hero_target_y - y))   //Движемя вертикально
        if global.hero_target_y &gt;= y
            sprite_index = array_of_sprites[1];   //Спрайт движение вниз (Down)
        else
            sprite_index = array_of_sprites[4];   //Спрайт движение вверх (Up)
    
    if (xprevious == x) &amp;&amp; (yprevious == y)
        sprite_index = array_of_sprites[0];
        
        //Скорость спрайта
    if sprite_index == array_of_sprites[0]
        image_speed = sqrt(global.hero_speed)/10;
    else
        image_speed = global.hero_speed/10;
        
    depth = -y;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Обработка поедания
if global.hero_eat 
{
    speed = 0;
    if health &lt; 100
        health += global.hero_eat_health_regen + random(global.victim_profit/global.level_difficult);      //Пока ест увеличивается здоровье
    sprite_index = array_of_sprites[5]; //Спрайт поедания
    image_speed = sqrt(global.hero_speed)/10;
    if alarm[0] &lt; 0     //Если сигнал не включен
        alarm[0] = global.hero_eating_time; //Закончит есть через ..
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Удар
if keyboard_check_released(vk_space) 
    {
    instance_create(x, y, obj_H_smash);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Запись очков
//highscore_add(steam_get_persona_name(), 1);

//draw_highscore(100, 100, room_width - 100, room_height - 100); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//view_xview[0] + 32, view_yview[0] + 32,
//draw_healthbar(5, 5, room_width-5, room_height/12, health, c_black, c_red, c_lime, 0, true, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
