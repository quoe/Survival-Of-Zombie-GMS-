<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Life_Object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>victim_base_speed = 1;
victim_speed = victim_base_speed + random(victim_base_speed/2 * global.level_difficult); //Скорость передвижения
normal_victim_speed = victim_speed;
V_max_HP = 100 * global.level_difficult;     //Здоровье жертв
Current_HP = V_max_HP;   //Текущее здоровье жертв

//Координаты будущего имитационного клика мышки
target_x = x;
target_y = y;

random_change_path = 15;

alarm[0] = random(random_change_path);   //Частота смены траектории

var array_of_sprites;    
    //0 - Спрайт Idle
    //1 - Спрайт Dowm
    //2 - Спрайт Left
    //3 - Спрайт Right
    //4 - Спрайт Up

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Замедление перестало действовать
victim_base_speed = 1;
victim_speed = victim_base_speed + random(victim_base_speed/2 * global.level_difficult); //Скорость передвижения
normal_victim_speed = victim_speed;
image_blend = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*radius = 600;
target_x = Hero.x + random(radius) - radius/2;
target_y = Hero.y + random(radius) - radius/2;
*/
//Герой перестаёт атаковать на основе скорости атаки
global.hero_attack = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target_x = random(room_width) - sprite_width/2;
target_y = random(room_height) - sprite_height/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Движение на точку</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if victim_speed &lt; 0 victim_speed = 0.05;

if !(abs(target_x - x) &lt;= sprite_width) || !(abs(target_y - y) &lt;= sprite_height)
    mp_potential_step(target_x, target_y, victim_speed, false)
else 
    {
    speed = 0;
    alarm[0] = random(random_change_path);
    }
    
//Чтобы не таранили один и тот же объект, а изменили траекторию если до него не достать
if round(random(random_change_path * 2)) == 0
    alarm[0] = random(random_change_path);
    /*
Hero_Click.x = mouse_x;
Hero_Click.y = mouse_y;
move_towards_point(Hero_Click.x, Hero_Click.y, global.hero_speed);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Анимация движения на точку</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(target_x - x)) &gt;= (abs(target_y - y))   //Движемя горизонтально
    if target_x &gt;= x
        sprite_index = array_of_sprites[3];   //Спрайт движение вправо (Right)
    else
        sprite_index = array_of_sprites[2];   //Спрайт движение влево (Left)
else
if (abs(target_x - x)) &lt; (abs(target_y - y))   //Движемя вертикально
    if target_y &gt;= y
        sprite_index = array_of_sprites[1];   //Спрайт движение вниз (Down)
    else
        sprite_index = array_of_sprites[4];   //Спрайт движение вверх (Up)

if (xprevious == x) &amp;&amp; (yprevious == y)
    {
    sprite_index = array_of_sprites[0];
    image_speed = 0;
    //image_speed = 0;  //Спрайт начинал бешено вертеться
    //image_index = floor(random(sprite_get_number(sprite_index))); //Спрайт начинал бешено вертеться
    }
        

    //Скорость спрайта
if sprite_index == array_of_sprites[0]  //Спрайт Idle
    image_speed = sqrt(victim_speed)/10;
else
    image_speed = victim_speed/10;
    
depth = -y;
if sprite_height &gt;= 32
    sprite_set_offset(sprite_index, 16, 25);    //Origin спрайта
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Убегание если Hero близко</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Убегание от Hero. Чем меньше V_max_HP, тем познее начнёт быстрее бегать
if distance_to_object(Hero) &lt; 2 * V_max_HP
   {
   victim_speed = normal_victim_speed + random(0.15*global.level_difficult);
   }
else
if distance_to_object(Hero) &lt; 1 * V_max_HP
   {
   victim_speed = normal_victim_speed + random(0.3*global.level_difficult);
   }
if distance_to_object(Hero) &lt; 0.5 * V_max_HP
   {
   victim_speed = normal_victim_speed + random(0.45*global.level_difficult);
   }
else
victim_speed = normal_victim_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Умирание и поедание</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Умирание и поедание
if Current_HP &lt;= 0  //Если жертва погибает
    {
        switch (object_get_parent(object_index))
        {
            //Если съеден человек
            case V_P_CLASS: 
                {
                global.game_skills_pause = true; 
                score += 1;
                break;
                }
            //Если съедено существо
            case V_C_CLASS: 
                {
                if irandom(10) == 0
                    global.game_skills_pause = true; 
                }
                break;
            default: ;
        }
         /*
        if object_get_parent(object_index) == V_P_CLASS//Если съеден человек
        {   //Появляется окно улучшений
            global.game_skills_pause = true;
            global.hero_target_x = Hero.x;
            global.hero_target_y = Hero.y;
        }
        if object_get_parent(object_index) == V_C_CLASS//Если съедено существо
        {   //Появляется окно улучшений
            if irandom(10) == 0
                {
                global.game_skills_pause = true;
                global.hero_target_x = Hero.x;
                global.hero_target_y = Hero.y;
                }
        }*/
        
        global.hero_eat = true; //Герой начинает ёё есть
        //Дополнительный реген в зависимости от жизней жертвы (типа усваемость xD)
        global.victim_profit = V_max_HP/666;
        //Время поедания на основе максимальных жизней жертвы и базового значения героя
        global.hero_eating_time = global.hero_eating_base_time + V_max_HP + random(V_max_HP/20);
        with (self)
        {
        instance_destroy();
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_H_smash_mass">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Current_HP -= global.hero_damage;
alarm[3] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Hero">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.hero_eat &amp; health &lt; 100
{
    //global.hero_eat = true;
    
    //instance_create(x, y, obj_V_blood);
    //instance_create(x + random(50)-25, y + random(50)-25, obj_V_blood);
    
    if !global.hero_attack
        {
        global.hero_attack = true;
        instance_create(Hero.x, Hero.y, obj_H_smash); //Создание удара от Hero
        //instance_create(Hero.x, Hero.y, obj_H_smash_mass); //Создание удара от Hero
        instance_create(x + random(8)-4, y + random(8)-4, obj_V_blood); //Кровь на земле
        alarm[1] = global.hero_attack_speed + (V_max_HP * global.hero_attack_speed)/10 + random(global.hero_attack_speed/10);  //Задержка перед следующей атакой
        Current_HP -= global.hero_damage;
        
        if global.hero_base_slow_vict != 0 
            {
            image_blend = c_red;
            normal_victim_speed -= (global.hero_base_slow_vict + random(global.hero_base_slow_vict/(2*global.level_difficult)));
            alarm[2] = global.hero_slow_vict_time;    //Время замедления
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//V_max_HP = 100;     //Здоровье жертв
//Current_HP = 100;   //Текущее здоровье жертв
draw_self();
draw_healthbar(bbox_left, bbox_bottom - sprite_height - 10, bbox_right, bbox_bottom - sprite_height - 5, 100*Current_HP/V_max_HP, c_black, c_red, c_lime, 0, true, true)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
