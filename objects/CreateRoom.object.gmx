<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Рисование тайлов заднего фона
//a = round(random(4));
//b = random(2);
tiles_depth = 9999;
tiles_width = 32;
tiles_height = 32;

width_tiles_count = room_width/tiles_width;     //13*32=416;    12*32=384
height_tiles_count = room_height/tiles_height;     //10*32=320;    9*32 =288
//global.myroom = room_add();
//room_set_width(room0, tiles_width * width_tiles_count);
//room_set_height(room0, tiles_height * height_tiles_count);
//room_set_caption(room0, 'Game Room');

randomize();

//Расстановка проходимых тайлов
for (i = 0; i &lt;= width_tiles_count; i += 1)
   {
       for (j = 0; j &lt;= height_tiles_count; j += 1)
       {
            a[i, j] = round(random(4));
            b[i, j] = round(random(2));
       }
   }
   
    
//Расстановка непроходимых тайлов (маленьких)
for (i = 0; i &lt;= width_tiles_count * 1; i += 1)
   {
        new_x = random(room_width); 
        new_y = random(room_height);
        while !place_free(new_x, new_y)
        {
        new_x = random(room_width) - 10; 
        new_y = random(room_height) - 10;
        }
        instance_create(new_x, new_y, t_np);
    }

//Расстановка непроходимых тайлов (больших (деревья))
for (i = 0; i &lt;= width_tiles_count; i += 1)
   {
        new_x = random(room_width); 
        new_y = random(room_height);
        while !place_free(new_x, new_y)
        {
        new_x = random(room_width) - 10; 
        new_y = random(room_height) - 10;
        }
        instance_create(new_x, new_y, t_np_2);
    }
//Создание сюрфейса тайлов
/*
surf = surface_create(room_width, room_height);

    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
   
    for (i = 0; i &lt;= width_tiles_count; i += 1)
    {
        for (j = 0; j &lt;= height_tiles_count; j += 1)
        {
        //draw_background_tiled(background0, i, j)
        //tile_add(background0, left, top, width, height, x, y, depth);
        //tile_add(background0, a[i, j]*tiles_width, b[i, j]*tiles_height, tiles_width, tiles_height, i*tiles_width, j*tiles_height, tiles_depth);
        draw_background_part(background0, a[i, j]*tiles_width, b[i, j]*tiles_height, tiles_width, tiles_height, i*tiles_width, j*tiles_height);


        }
    }
   
    surface_reset_target();
    //tile_layer_delete(tiles_depth);
    view_surface_id[0] = surf;
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Steam
//global.steam_api = false;
/* Работа со стимом
if steam_initialised()
   {
   show_message(steam_get_persona_name() + ' ' + string(steam_get_user_steam_id()) + ' ' + string(steam_is_user_logged_on()));
   }
//Загрузка аватарки
back = background_add("http://cdn.akamai.steamstatic.com/steamcommunity/public/images/avatars/83/83e4ad7f5d4833b648025415641260d9e63e618b_medium.jpg", 0, 0); 
*/
//show_message(string_upper(steam_get_persona_name()))

//show_message(string(steam_get_user_steam_id()));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Создание иконок улучшения
instance_create(64, 48, skill_hero_health_lost);
instance_create(128, 48, skill_hero_eat_base_health_regen);
instance_create(192, 48, skill_hero_base_damage);
instance_create(256, 48, skill_hero_base_speed);
instance_create(320, 48, skill_hero_base_attack_speed);

instance_create(64, 112 - 16, skill_hero_eating_base_time);
instance_create(128, 112 - 16, skill_hero_base_slow_vict);
instance_create(192, 112 - 16, skill_hero_skill_mutation);
instance_create(256, 112 - 16, skill_hero_base_speed);
instance_create(320, 112 - 16, skill_hero_base_attack_speed);

instance_deactivate_object(SKILL_MENU);
//*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(view_xview[0] + 5, view_yview[0] + 5, back_skill_btn);
instance_deactivate_object(back_skill_btn);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_right)
   {
   if window_get_fullscreen()
      {
      window_set_fullscreen(false);
      }
   else
      {
      window_set_fullscreen(true);
      }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Обработка загрузки аватарки
/*
if ds_map_find_value(async_load, "id") == back
   {
   if ds_map_find_value(async_load, "status") &gt;= 0
      {
      tile_add(back,0,0,64,64,100,100,50)
      }
   }



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Рисование тайлов
tile_layer_delete(tiles_depth);

for (i = 0; i &lt;= width_tiles_count; i += 1)
   {
       for (j = 0; j &lt;= height_tiles_count; j += 1)
       {
       //draw_background_tiled(background0, i, j)
       //tile_add(background0, left, top, width, height, x, y, depth);
       tile_add(background0, a[i, j]*tiles_width, b[i, j]*tiles_height, tiles_width, tiles_height, i*tiles_width, j*tiles_height, tiles_depth);
       }
   }



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
