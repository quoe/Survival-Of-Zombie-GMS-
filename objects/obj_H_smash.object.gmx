<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>H_smash</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

image_speed = 1;
//image_index = floor(random(sprite_get_number(sprite_index))); 
image_angle = random(5) - 10;
image_alpha = 0.8 + random(0.2);
depth = Hero.depth - 20;

image_xscale = choose(-1, 1);

array_of_Hero_sprites[0] = H_I;    //Спрайт Idle
array_of_Hero_sprites[1] = H_D;    //Спрайт Dowm
array_of_Hero_sprites[2] = H_L;    //Спрайт Left
array_of_Hero_sprites[3] = H_R;    //Спрайт Right
array_of_Hero_sprites[4] = H_U;    //Спрайт Up
array_of_Hero_sprites[5] = H_E;    //Спрайт Eat
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Направление анимации
randomize();

if Hero.sprite_index == array_of_Hero_sprites[4]    //Спрайт движение вверх (Up)
    {
    x = Hero.x + random(2) - 1;
    y = Hero.y - Hero.sprite_height/4 + random(2) - 1;
    }
else
if Hero.sprite_index == array_of_Hero_sprites[2]    //Спрайт движение влево (Left)
    {
    x = Hero.x - Hero.sprite_width/5 + random(2) - 1;
    y = Hero.y - Hero.sprite_width/5 + random(2) - 1;
    image_xscale = 1;   
    }
else
if Hero.sprite_index == array_of_Hero_sprites[1]    //Спрайт движение вниз (Down)
    {
    x = Hero.x + random(2) - 1;
    y = Hero.y - Hero.sprite_height/4 + random(2) - 1;
    }
else
if Hero.sprite_index == array_of_Hero_sprites[3]    //Спрайт движение вправо (Right)
    {
    x = Hero.x + Hero.sprite_width/5 + random(2) - 1;
    y = Hero.y - Hero.sprite_width/5 + random(2) - 1;
    image_xscale = -1;   
    }
else
    {
       //Спрайт отсутствия движений (Idle)
    
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_speed = 0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
